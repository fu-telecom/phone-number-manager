services:
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10-focal
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - ./data:/var/lib/mysql
      - ./db:/seed/:ro
    networks:
      - backnet
    environment:
      - MYSQL_DATABASE=fut_public_be
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
      - MYSQL_ROOT_HOST=%
    expose:
      - 3306
      - 33060

  backend:
    build:
      context: src
      target: builder
    restart: always
    secrets:
      - db-password
    ports:
      - 8000:8000
    volumes:
      - ./src:/app:ro
    networks:
      - backnet
      - frontnet
    depends_on:
      db:
        condition: service_healthy

  proxy:
    profiles: ['']
    image: nginx:latest
    ports:
      - 80:80
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
    depends_on:
      - backend
    networks:
      - frontnet

  proxy-ssl:
    profiles: [prod]
    image: nginx:latest
    ports:
      - 443:443
    restart: always
    volumes:
      - ./nginx/ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - backend
    networks:
      - frontnet

  certbot:
    profiles: [prod]
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - frontnet

secrets:
  db-password:
    file: private/password.txt

networks:
  backnet:
  frontnet: